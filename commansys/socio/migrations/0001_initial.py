# Generated by Django 2.2.24 on 2024-05-19 02:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('reported', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.TextField(default='Community Name', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('rules', models.TextField(default='First Rule of Community: you do not talk about the community.')),
                ('picture', models.ImageField(default='uploads/service_pictures/default.png', upload_to='uploads/service_pictures/')),
                ('location', models.CharField(default='410255493', max_length=150)),
                ('is_private', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('followers', models.ManyToManyField(related_name='followed_communities', to=settings.AUTH_USER_MODEL)),
                ('managers', models.ManyToManyField(related_name='managed_communities', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requests', models.ManyToManyField(blank=True, related_name='invited_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostTemplateItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('post_type', models.CharField(choices=[('IMAGE', 'image'), ('TEXT', 'text'), ('VIDEO', 'video'), ('AUDIO', 'audio'), ('DATETIME', 'datetime'), ('LOCATION', 'location')], max_length=20)),
                ('mandatory', models.BooleanField(default=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/post_pictures/')),
                ('video', models.FileField(blank=True, null=True, upload_to='uploads/post_video/')),
                ('audio', models.FileField(blank=True, null=True, upload_to='uploads/post_audio/')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socio.Community')),
                ('fields', models.ManyToManyField(related_name='post_templates', to='socio.PostTemplateItem')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('reported', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comments', models.ManyToManyField(blank=True, related_name='posts', to='socio.Comment')),
                ('communit_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='socio.Community')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='disliked_posts', to=settings.AUTH_USER_MODEL)),
                ('fields', models.ManyToManyField(related_name='posts', to='socio.PostTemplateItem')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='socio.PostTemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('invite', models.BooleanField(default=False)),
                ('read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
